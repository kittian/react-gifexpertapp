{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cat","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAAqB,EAEZC,mBAAS,IAFG,mBAEzCC,EAFyC,KAE7BC,EAF6B,KAoBhD,OACI,sBAAMC,SAZW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAE1BR,GAAc,SAACS,GAAD,OAAUP,GAAV,mBAAyBO,OACvCN,EAAc,MAMlB,SACI,uBACIO,KAAO,OACPC,MAAUT,EACVU,SArBc,SAACP,GAEvBF,EAAcE,EAAEQ,OAAOF,a,+BCTlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAWH,GAF/C,+DAGAI,MAAOF,GAHP,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCEPO,EAAc,SAAC,GAAuB,IAAtBJ,EAAqB,EAArBA,GAAKC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IACrC,OACI,sBAAKc,UAAU,yCAAf,UACG,qBAAKC,IAAMf,EAAMgB,IAAON,GAAcD,GACtC,4BAAKC,QCFHO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDb,SAAEA,GAAe,IAAD,EACdd,mBAAS,CAC/BqB,KAAK,GACLa,SAAS,IAH2B,mBACjCC,EADiC,KAC1BC,EAD0B,KAgBxC,OAVAC,qBAAW,WACPxB,EAASC,GACJwB,MAAM,SAAAC,GACHH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAGvB,CAACpB,IAEIqB,EDbyBK,CAAa1B,GAAhCa,EAFwB,EAE7BN,KAAaa,EAFgB,EAEhBA,QAErB,OACI,qCACI,oBAAIJ,UAAU,qCAAd,SAAqDhB,IAEnDoB,GAAW,mBAAGJ,UAAU,mCAAb,wBAEb,qBAAKA,UAAU,YAAf,SAEIH,EAAOJ,KAAK,SAACC,GAAD,OACR,cAAC,EAAD,eAESA,GADCA,EAAIC,aEdrBgB,EAAe,WAAM,IAAD,EAEOzC,mBAAS,CAAC,cAFjB,mBAEtB0C,EAFsB,KAEV3C,EAFU,KAS7B,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAiBA,IAC9B,uBACA,6BAGQ2C,EAAWnB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAaA,GADJA,Y,MCjBrC6B,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.9e733399.chunk.js","sourcesContent":["import React , { useState }from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ( { setCategories } ) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleImputChange = (e) => {\r\n\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length > 2)\r\n        {\r\n            setCategories((cat) => [inputValue, ...cat]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <form onSubmit = { handleSubmit }>\r\n            <input \r\n                type = 'text'\r\n                value = { inputValue }\r\n                onChange = { handleImputChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories : PropTypes.func.isRequired\r\n}\r\n ","export const getGifs = async( category ) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category )}&limit=10&api_key=azGfxconOdnqca0q3Ou9J0cqZr1NCQHa`;\r\n    const resp = await fetch( url );\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return{\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id , title, url}) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\" >\r\n           <img src={ url } alt= { title } key={ id }/>\r\n           <p>{ title }</p>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const { data:images, loading} = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\" animate__animated animate__fadeIn\">{ category }</h3>\r\n\r\n            { loading && <p className=\"animate__animated animate__flash\">Loading...</p> }\r\n\r\n            <div className=\"card-grid\">\r\n            {\r\n                images.map( (img) => (\r\n                    <GifGridItem \r\n                        key={ img.id }\r\n                        { ...img }/>\r\n                ))\r\n            }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n        getGifs( category )\r\n            .then( imgs => {\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n            })\r\n    },[category])\r\n\r\n    return state; \r\n}","import React, {useState} from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () =>{\r\n\r\n    const [categories, setCategories] = useState(['One Punch'])\r\n\r\n  //    const handleAdd = () => {\r\n  //        setCategories(['One Piece', ...categories]);\r\n  //\r\n  //    }\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories= { setCategories }/>\r\n            <hr/>\r\n            <ol>\r\n\r\n                {\r\n                    categories.map( category => \r\n                        <GifGrid\r\n                            key =  { category }\r\n                            category = { category } />\r\n                    )\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {GifExpertApp} from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n    <GifExpertApp />,\n    document.getElementById('root')\n);"],"sourceRoot":""}